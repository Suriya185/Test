name: test
on:
  push:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        type: string
        default: production
permissions:
  id-token: write
  contents: write
  checks: write
  packages: write

jobs:
   deploy:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    - name: upload scripts artifacts
      uses: actions/upload-artifact@v4
      with:
        name: json 
        path: ./test.json

   destroy:
    environment: dev
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
  
      - name: Delete Artifact
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
      
            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name === "json") {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
              }
            }
